apiVersion: apps/v1
kind: Deployment
metadata:
  name: microthings-apis
  labels:
    app: microthings-apis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: microthings-apis
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: microthings-apis
    spec:
      containers:
      - name: micro-gateway-api
        image: <GATEWAYAPI_IMAGE>
        ports:
        - containerPort: 3000
      - name: micro_loggingservice
        image: <LOGGINGAPI_IMAGE>
        ports:
        - containerPort: 3001
        env:
          - name: "ApplicationSettings:DatabaseType"
            valueFrom:
              secretKeyRef:
                name: loggingapi-data
                key: logging-dbtype
      imagePullSecrets:
      - name: <insert your digitalocean container registry secret>
---
apiVersion: v1
kind: Service
metadata:
  name: micro-gatewayapi-service
  labels:
    run: coop-gatewayapi-service
spec:
  ports:
    - port: 16000
      targetPort: 3000
  selector:
    app: microthings-apis
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: micro-gatewayapi-ingress-nginx-controller
  annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
      service.beta.kubernetes.io/do-loadbalancer-protocol: https
      service.beta.kubernetes.io/do-loadbalancer-tls-passthrough: "true"
spec:
  tls:
  - hosts:
    - gateway.example.com
    secretName: <your tls secret name>
  rules:
  - host: gateway.example.com
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: micro-gatewayapi-service
            port:
              number: 16000
